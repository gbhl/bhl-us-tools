// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 14.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace DALCodeGen.sql
{
    using System.Linq;
    using System.Text;
    using System.Collections.Generic;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "14.0.0.0")]
    public partial class AbstractObjectClass : AbstractObjectClassBase
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public virtual string TransformText()
        {
            this.Write("\r\n");
            
            #line 8 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
 
renderAbstractClass(this._classNamespace, this._objectSchema, this._objectName, this._className, this._columns.ToArray()); 

            
            #line default
            #line hidden
            this.Write("\r\n");
            return this.GenerationEnvironment.ToString();
        }
        
        #line 12 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"

private void renderAbstractClass(string classNamespace, string objectSchema, string objectName, string className, DBColumn[] tableColumns)
{
	DateTime generated = DateTime.Now;

	StringBuilder sb = new StringBuilder();
	int x = 0;
	foreach (DBColumn column in tableColumns)
	{
		if (x < tableColumns.Length)
		{
			sb.AppendFormat("{0} {1}", column.Type(), column.ParamName());				
			if (x < tableColumns.Length -1) sb.AppendFormat(", \r\n\t\t\t");
		}			
		x++;
	}		
	string constructorParms = sb.ToString();


        
        #line default
        #line hidden
        
        #line 30 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
this.Write("// Generated ");

        
        #line default
        #line hidden
        
        #line 31 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(generated.ToString()));

        
        #line default
        #line hidden
        
        #line 31 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
this.Write("\r\n// Do not modify the contents of this code file.\r\n// This abstract class ");

        
        #line default
        #line hidden
        
        #line 33 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(className));

        
        #line default
        #line hidden
        
        #line 33 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
this.Write(" is based upon ");

        
        #line default
        #line hidden
        
        #line 33 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(objectSchema));

        
        #line default
        #line hidden
        
        #line 33 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
this.Write(".");

        
        #line default
        #line hidden
        
        #line 33 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(objectName));

        
        #line default
        #line hidden
        
        #line 33 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
this.Write(".\r\n\r\n#region How To Implement\r\n\r\n// To implement, create another code file as out" +
        "lined in the following example.\r\n// It is recommended the code file you create b" +
        "e in the same project as this code file.\r\n// Example:\r\n// using System;\r\n//\r\n// " +
        "namespace ");

        
        #line default
        #line hidden
        
        #line 42 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(classNamespace));

        
        #line default
        #line hidden
        
        #line 42 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
this.Write("\r\n// {\r\n//\t\t[Serializable]\r\n// \t\tpublic class ");

        
        #line default
        #line hidden
        
        #line 45 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(objectName));

        
        #line default
        #line hidden
        
        #line 45 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
this.Write(" : ");

        
        #line default
        #line hidden
        
        #line 45 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(className));

        
        #line default
        #line hidden
        
        #line 45 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
this.Write("\r\n//\t\t{\r\n//\t\t}\r\n// }\r\n\r\n#endregion How To Implement\r\n\r\n#region Using \r\n\r\nusing Sy" +
        "stem;\r\nusing System.Data;\r\nusing CustomDataAccess;\r\n\r\n#endregion Using\r\n\r\nnamesp" +
        "ace ");

        
        #line default
        #line hidden
        
        #line 60 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(classNamespace));

        
        #line default
        #line hidden
        
        #line 60 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
this.Write("\r\n{\r\n\t[Serializable]\r\n\tpublic abstract class ");

        
        #line default
        #line hidden
        
        #line 63 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(className));

        
        #line default
        #line hidden
        
        #line 63 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
this.Write(" : CustomObjectBase, ICloneable, IComparable, IDisposable, ISetValues\r\n\t{\r\n\t\t#reg" +
        "ion Constructors\r\n\t\t\r\n\t\t/// <summary>\r\n\t\t/// Default constructor.\r\n\t\t/// </summa" +
        "ry>\r\n\t\tpublic ");

        
        #line default
        #line hidden
        
        #line 70 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(className));

        
        #line default
        #line hidden
        
        #line 70 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
this.Write("()\r\n\t\t{\r\n\t\t}\r\n\r\n\t\t/// <summary>\r\n\t\t/// Overloaded constructor specifying each col" +
        "umn value.\r\n\t\t/// </summary>\r\n\t\t");

        
        #line default
        #line hidden
        
        #line 77 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
 foreach (DBColumn column in tableColumns)
		{
        
        #line default
        #line hidden
        
        #line 78 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
this.Write("/// <param name=\"");

        
        #line default
        #line hidden
        
        #line 79 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(column.ParamName()));

        
        #line default
        #line hidden
        
        #line 79 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
this.Write("\"></param>\r\n\t\t");

        
        #line default
        #line hidden
        
        #line 80 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
}
        
        #line default
        #line hidden
        
        #line 80 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
this.Write("public ");

        
        #line default
        #line hidden
        
        #line 81 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(className));

        
        #line default
        #line hidden
        
        #line 81 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
this.Write("(");

        
        #line default
        #line hidden
        
        #line 81 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(constructorParms));

        
        #line default
        #line hidden
        
        #line 81 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
this.Write(") : this()\r\n\t\t{\r\n\t\t");

        
        #line default
        #line hidden
        
        #line 83 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
 foreach (DBColumn column in tableColumns)
		{
        
        #line default
        #line hidden
        
        #line 84 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
this.Write("\t");

        
        #line default
        #line hidden
        
        #line 85 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(column.SetName()));

        
        #line default
        #line hidden
        
        #line 85 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
this.Write(" = ");

        
        #line default
        #line hidden
        
        #line 85 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(column.ParamName()));

        
        #line default
        #line hidden
        
        #line 85 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
this.Write(";\r\n\t\t");

        
        #line default
        #line hidden
        
        #line 86 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
}
        
        #line default
        #line hidden
        
        #line 86 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
this.Write("}\r\n\t\t\r\n\t\t#endregion Constructors\r\n\t\t\r\n\t\t#region Destructor\r\n\t\t\r\n\t\t/// <summary>\r\n" +
        "\t\t///\r\n\t\t/// </summary>\r\n\t\t~");

        
        #line default
        #line hidden
        
        #line 96 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(className));

        
        #line default
        #line hidden
        
        #line 96 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
this.Write(@"()
		{
		}
		
		#endregion Destructor
		
		#region Set Values
		
		/// <summary>
		/// Set the property values of this instance from the specified <see cref=""CustomDataRow""/>.
		/// </summary>
		public virtual void SetValues(CustomDataRow row)
		{
			foreach (CustomDataColumn column in row)
			{
				switch (column.Name)
				{
				");

        
        #line default
        #line hidden
        
        #line 113 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
 foreach (DBColumn column in tableColumns){
        
        #line default
        #line hidden
        
        #line 113 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
this.Write("\tcase \"");

        
        #line default
        #line hidden
        
        #line 114 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(column.Name));

        
        #line default
        #line hidden
        
        #line 114 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
this.Write("\" :\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t");

        
        #line default
        #line hidden
        
        #line 116 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(column.VariableName()));

        
        #line default
        #line hidden
        
        #line 116 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
this.Write(" = (");

        
        #line default
        #line hidden
        
        #line 116 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(column.Type()));

        
        #line default
        #line hidden
        
        #line 116 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
this.Write(")column.Value;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t");

        
        #line default
        #line hidden
        
        #line 119 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
}
        
        #line default
        #line hidden
        
        #line 119 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
this.Write("\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tIsNew = false;\r\n\t\t}\r\n\t\t\r\n\t\t#endregion Set Values\r\n\t\t\r\n\t\t#reg" +
        "ion Properties\r\n\t\t");

        
        #line default
        #line hidden
        
        #line 129 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
 foreach (DBColumn column in tableColumns)
		{
        
        #line default
        #line hidden
        
        #line 130 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
this.Write("\r\n\t\t#region ");

        
        #line default
        #line hidden
        
        #line 132 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(column.PropertyName()));

        
        #line default
        #line hidden
        
        #line 132 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
this.Write("\r\n\t\t\r\n\t\tprivate ");

        
        #line default
        #line hidden
        
        #line 134 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(column.Type()));

        
        #line default
        #line hidden
        
        #line 134 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
this.Write(" ");

        
        #line default
        #line hidden
        
        #line 134 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(column.VariableName()));

        
        #line default
        #line hidden
        
        #line 134 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(column.DefaultValue()));

        
        #line default
        #line hidden
        
        #line 134 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
this.Write(";\r\n\t\t\r\n\t\t/// <summary>\r\n\t\t/// Column: ");

        
        #line default
        #line hidden
        
        #line 137 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(column.Name));

        
        #line default
        #line hidden
        
        #line 137 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
this.Write(";\r\n\t\t/// DBMS data type: ");

        
        #line default
        #line hidden
        
        #line 138 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(column.DataTypeNameComplete));

        
        #line default
        #line hidden
        
        #line 138 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
this.Write(";");

        
        #line default
        #line hidden
        
        #line 138 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
 if (column.IsAutoKey){
        
        #line default
        #line hidden
        
        #line 138 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
this.Write(" Auto key;");

        
        #line default
        #line hidden
        
        #line 138 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
} if (column.IsComputed){
        
        #line default
        #line hidden
        
        #line 138 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
this.Write(" Computed;");

        
        #line default
        #line hidden
        
        #line 138 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
} if (column.IsNullable){
        
        #line default
        #line hidden
        
        #line 138 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
this.Write(" Nullable;");

        
        #line default
        #line hidden
        
        #line 138 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
}
        
        #line default
        #line hidden
        
        #line 138 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
this.Write("\r\n\t\t/// </summary>\r\n\t\t");

        
        #line default
        #line hidden
        
        #line 141 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(column.ColumnDefinition()));

        
        #line default
        #line hidden
        
        #line 141 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
this.Write("\r\n\t\tpublic ");

        
        #line default
        #line hidden
        
        #line 142 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(column.Type()));

        
        #line default
        #line hidden
        
        #line 142 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
this.Write(" ");

        
        #line default
        #line hidden
        
        #line 142 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(column.PropertyName()));

        
        #line default
        #line hidden
        
        #line 142 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
this.Write("\r\n\t\t{\r\n\t\t\tget\r\n\t\t\t{\r\n\t\t\t\treturn ");

        
        #line default
        #line hidden
        
        #line 146 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(column.VariableName()));

        
        #line default
        #line hidden
        
        #line 146 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
this.Write(";\r\n\t\t\t}");

        
        #line default
        #line hidden
        
        #line 147 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
 if (!column.IsComputed && !column.IsAutoKey){
        
        #line default
        #line hidden
        
        #line 147 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
this.Write("\r\n\t\t\tset\r\n\t\t\t{");

        
        #line default
        #line hidden
        
        #line 150 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
 if (column.DefaultAction().Trim() != string.Empty){ 
        
        #line default
        #line hidden
        
        #line 150 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
this.Write("\r\n\t\t\t\t");

        
        #line default
        #line hidden
        
        #line 152 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(column.DefaultAction()));

        
        #line default
        #line hidden
        
        #line 152 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
 } 
        
        #line default
        #line hidden
        
        #line 152 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
this.Write("\r\n\t\t\t\tif (");

        
        #line default
        #line hidden
        
        #line 154 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(column.VariableName()));

        
        #line default
        #line hidden
        
        #line 154 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
this.Write(" != value)\r\n\t\t\t\t{\r\n\t\t\t\t\t");

        
        #line default
        #line hidden
        
        #line 156 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(column.VariableName()));

        
        #line default
        #line hidden
        
        #line 156 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
this.Write(" = value;\r\n\t\t\t\t\t_IsDirty = true;\r\n\t\t\t\t}\r\n\t\t\t}");

        
        #line default
        #line hidden
        
        #line 159 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
 } else {
        
        #line default
        #line hidden
        
        #line 159 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
this.Write(@"
			set
			{
				// NOTE: This dummy setter provides a work-around for the following: Read-only properties cannot be exposed by XML Web Services
				// see http://support.microsoft.com/kb/313584
				// Cause: When an object is passed i.e. marshalled to or from a Web service, it must be serialized into an XML stream and then deserialized back into an object.
				// The XML Serializer cannot deserialize the XML back into an object because it cannot load the read-only properties. 
				// Thus the read-only properties are not exposed through the Web Services Description Language (WSDL). 
				// Because the Web service proxy is generated from the WSDL, the proxy also excludes any read-only properties.
			}");

        
        #line default
        #line hidden
        
        #line 169 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
}
        
        #line default
        #line hidden
        
        #line 169 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
this.Write("\r\n\t\t}\r\n\t\t\r\n\t\t#endregion ");

        
        #line default
        #line hidden
        
        #line 173 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(column.PropertyName()));

        
        #line default
        #line hidden
        
        #line 173 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
this.Write("\r\n\t\t");

        
        #line default
        #line hidden
        
        #line 174 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
}
        
        #line default
        #line hidden
        
        #line 174 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
this.Write("\t\r\n\t\t#endregion Properties\r\n\r\n\t\t#region From Array serialization\r\n\t\t\r\n\t\t/// <summ" +
        "ary>\r\n\t\t/// Deserializes the byte array and returns an instance of <see cref=\"");

        
        #line default
        #line hidden
        
        #line 180 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(className));

        
        #line default
        #line hidden
        
        #line 180 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
this.Write("\"/>.\r\n\t\t/// </summary>\r\n\t\t/// <returns>If the byte array can be deserialized and " +
        "cast to an instance of <see cref=\"");

        
        #line default
        #line hidden
        
        #line 182 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(className));

        
        #line default
        #line hidden
        
        #line 182 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
this.Write("\"/>, \r\n\t\t/// returns an instance of <see cref=\"");

        
        #line default
        #line hidden
        
        #line 183 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(className));

        
        #line default
        #line hidden
        
        #line 183 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
this.Write("\"/>; otherwise returns null.</returns>\r\n\t\tpublic static new ");

        
        #line default
        #line hidden
        
        #line 184 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(className));

        
        #line default
        #line hidden
        
        #line 184 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
this.Write(" FromArray(byte[] byteArray)\r\n\t\t{\r\n\t\t\t");

        
        #line default
        #line hidden
        
        #line 186 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(className));

        
        #line default
        #line hidden
        
        #line 186 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
this.Write(" o = null;\r\n\t\t\t\r\n\t\t\ttry\r\n\t\t\t{\r\n\t\t\t\to = (");

        
        #line default
        #line hidden
        
        #line 190 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(className));

        
        #line default
        #line hidden
        
        #line 190 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
this.Write(@") CustomObjectBase.FromArray(byteArray);
			}
			catch (Exception e)
			{
				throw e;
			}

			return o;
		}
		
		#endregion From Array serialization

		#region CompareTo
		
		/// <summary>
		/// Compares this instance with a specified object. Throws an ArgumentException if the specified object is not of type <see cref=""");

        
        #line default
        #line hidden
        
        #line 205 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(className));

        
        #line default
        #line hidden
        
        #line 205 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
this.Write("\"/>.\r\n\t\t/// </summary>\r\n\t\t/// <param name=\"obj\">An <see cref=\"");

        
        #line default
        #line hidden
        
        #line 207 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(className));

        
        #line default
        #line hidden
        
        #line 207 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
this.Write("\"/> object to compare with this instance.</param>\r\n\t\t/// <returns>0 if the specif" +
        "ied object equals this instance; -1 if the specified object does not equal this " +
        "instance.</returns>\r\n\t\tpublic virtual int CompareTo(Object obj)\r\n\t\t{\r\n\t\t\tif (obj" +
        " is ");

        
        #line default
        #line hidden
        
        #line 211 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(className));

        
        #line default
        #line hidden
        
        #line 211 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
this.Write(")\r\n\t\t\t{\r\n\t\t\t\t");

        
        #line default
        #line hidden
        
        #line 213 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(className));

        
        #line default
        #line hidden
        
        #line 213 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
this.Write(" o = (");

        
        #line default
        #line hidden
        
        #line 213 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(className));

        
        #line default
        #line hidden
        
        #line 213 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
this.Write(") obj;\r\n\t\t\t\t\r\n\t\t\t\tif (");

        
        #line default
        #line hidden
        
        #line 215 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
 string conjunction = string.Empty; 
				if (tableColumns.Length > 0)
				{
					conjunction = " &&";
				}
        
        #line default
        #line hidden
        
        #line 219 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
this.Write("\r\n\t\t\t\t\to.IsNew == IsNew &&\r\n\t\t\t\t\to.IsDeleted == IsDeleted");

        
        #line default
        #line hidden
        
        #line 222 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(conjunction));

        
        #line default
        #line hidden
        
        #line 222 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
 int y = 0;
				foreach (DBColumn column in tableColumns)
				{
					if (y < tableColumns.Length -1)
					{
						conjunction = "&&";
					}
					else
					{
						conjunction = "";
					}
					y++;
					string compareTo = string.Empty;
					
					if (column.LanguageType == "string")
					{
						compareTo = string.Format("GetComparisonString(o.{0}) == GetComparisonString({0}) {1}", column.PropertyName(), conjunction);
					}
					else
					{
						compareTo = string.Format("o.{0} == {0} {1}", column.PropertyName(), conjunction);
					}
					
        
        #line default
        #line hidden
        
        #line 244 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
this.Write("\r\n\t\t\t\t\t");

        
        #line default
        #line hidden
        
        #line 246 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(compareTo));

        
        #line default
        #line hidden
        
        #line 246 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
}
        
        #line default
        #line hidden
        
        #line 246 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
this.Write("\r\n\t\t\t\t)\r\n\t\t\t\t{\r\n\t\t\t\t\to = null;\r\n\t\t\t\t\treturn 0; // true\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t" +
        "\t\t\t\to = null;\r\n\t\t\t\t\treturn -1; // false\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tthrow n" +
        "ew ArgumentException(\"Argument is not of type ");

        
        #line default
        #line hidden
        
        #line 261 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(className));

        
        #line default
        #line hidden
        
        #line 261 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
this.Write("\");\r\n\t\t\t}\r\n\t\t}\r\n \t\t\r\n\t\t#endregion CompareTo\r\n\t\t\r\n\t\t#region Operators\r\n\t\t\r\n\t\t/// <" +
        "summary>\r\n\t\t/// Equality operator (==) returns true if the values of its operand" +
        "s are equal, false otherwise.\r\n\t\t/// </summary>\r\n\t\t/// <param name=\"a\">The first" +
        " <see cref=\"");

        
        #line default
        #line hidden
        
        #line 272 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(className));

        
        #line default
        #line hidden
        
        #line 272 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
this.Write("\"/> object to compare.</param>\r\n\t\t/// <param name=\"b\">The second <see cref=\"");

        
        #line default
        #line hidden
        
        #line 273 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(className));

        
        #line default
        #line hidden
        
        #line 273 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
this.Write("\"/> object to compare.</param>\r\n\t\t/// <returns>true if values of operands are equ" +
        "al, false otherwise.</returns>\r\n\t\tpublic static bool operator == (");

        
        #line default
        #line hidden
        
        #line 275 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(className));

        
        #line default
        #line hidden
        
        #line 275 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
this.Write(" a, ");

        
        #line default
        #line hidden
        
        #line 275 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(className));

        
        #line default
        #line hidden
        
        #line 275 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
this.Write(@" b)
		{
			if (((Object) a) == null || ((Object) b) == null)
			{
				if (((Object) a) == null && ((Object) b) == null)
				{
					return true;
				}
			}
			else
			{
				int r = a.CompareTo(b);
				
				if (r == 0)
				{
					return true;
				}
				else
				{
					return false;
				}
			}
			
			return false;
		}
		
		/// <summary>
		/// Inequality operator (!=) returns false if its operands are equal, true otherwise.
		/// </summary>
		/// <param name=""a"">The first <see cref=""");

        
        #line default
        #line hidden
        
        #line 304 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(className));

        
        #line default
        #line hidden
        
        #line 304 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
this.Write("\"/> object to compare.</param>\r\n\t\t/// <param name=\"b\">The second <see cref=\"");

        
        #line default
        #line hidden
        
        #line 305 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(className));

        
        #line default
        #line hidden
        
        #line 305 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
this.Write("\"/> object to compare.</param>\r\n\t\t/// <returns>false if values of operands are eq" +
        "ual, false otherwise.</returns>\r\n\t\tpublic static bool operator !=(");

        
        #line default
        #line hidden
        
        #line 307 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(className));

        
        #line default
        #line hidden
        
        #line 307 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
this.Write(" a, ");

        
        #line default
        #line hidden
        
        #line 307 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(className));

        
        #line default
        #line hidden
        
        #line 307 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
this.Write(" b)\r\n\t\t{\r\n\t\t\treturn !(a == b);\r\n\t\t}\r\n\t\t\r\n\t\t/// <summary>\r\n\t\t/// Returns true the " +
        "specified object is equal to this object instance, false otherwise.\r\n\t\t/// </sum" +
        "mary>\r\n\t\t/// <param name=\"obj\">The <see cref=\"");

        
        #line default
        #line hidden
        
        #line 315 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(className));

        
        #line default
        #line hidden
        
        #line 315 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
this.Write("\"/> object to compare with the current <see cref=\"");

        
        #line default
        #line hidden
        
        #line 315 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(className));

        
        #line default
        #line hidden
        
        #line 315 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
this.Write("\"/>.</param>\r\n\t\t/// <returns>true if specified object is equal to the instance of" +
        " this object, false otherwise.</returns>\r\n\t\tpublic override bool Equals(Object o" +
        "bj)\r\n\t\t{\r\n\t\t\tif (!(obj is ");

        
        #line default
        #line hidden
        
        #line 319 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(className));

        
        #line default
        #line hidden
        
        #line 319 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
this.Write("))\r\n\t\t\t{\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn this == (");

        
        #line default
        #line hidden
        
        #line 324 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(className));

        
        #line default
        #line hidden
        
        #line 324 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
this.Write(@") obj;
		}
	
        /// <summary>
        /// Returns the hash code for this instance.
        /// </summary>
        /// <returns>Hash code for this instance as an integer.</returns>
		public override int GetHashCode()
		{
			return base.GetHashCode();
		}
		
		#endregion Operators
		
		#region SortColumn
		
		/// <summary>
		/// Use when defining sort columns for a collection sort request.
		/// For example where list is a instance of <see cref=""CustomGenericList"">, 
		/// list.Sort(SortOrder.Ascending, ");

        
        #line default
        #line hidden
        
        #line 343 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(className));

        
        #line default
        #line hidden
        
        #line 343 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
this.Write(".SortColumn.");

        
        #line default
        #line hidden
        
        #line 343 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(tableColumns[0].Alias));

        
        #line default
        #line hidden
        
        #line 343 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
this.Write(");\r\n\t\t/// </summary>\r\n\t\t[Serializable]\r\n\t\tpublic sealed class SortColumn\r\n\t\t{");

        
        #line default
        #line hidden
        
        #line 347 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
foreach (DBColumn column in tableColumns)
		{
        
        #line default
        #line hidden
        
        #line 348 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
this.Write("\t\r\n\t\t\tpublic const string ");

        
        #line default
        #line hidden
        
        #line 349 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(column.PropertyName()));

        
        #line default
        #line hidden
        
        #line 349 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
this.Write(" = \"");

        
        #line default
        #line hidden
        
        #line 349 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(column.PropertyName()));

        
        #line default
        #line hidden
        
        #line 349 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
this.Write("\";");

        
        #line default
        #line hidden
        
        #line 349 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
}
        
        #line default
        #line hidden
        
        #line 349 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
this.Write("\r\n\t\t}\r\n\t\t\t\t\r\n\t\t#endregion SortColumn\r\n\t}\r\n}\r\n// end of source generation\r\n");

        
        #line default
        #line hidden
        
        #line 357 "C:\Users\mikel\Dropbox\MWLShare\DALCodeGen\DALCodeGen\sql\AbstractObjectClass.tt"
	
}

        
        #line default
        #line hidden
    }
    
    #line default
    #line hidden
    #region Base class
    /// <summary>
    /// Base class for this transformation
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "14.0.0.0")]
    public class AbstractObjectClassBase
    {
        #region Fields
        private global::System.Text.StringBuilder generationEnvironmentField;
        private global::System.CodeDom.Compiler.CompilerErrorCollection errorsField;
        private global::System.Collections.Generic.List<int> indentLengthsField;
        private string currentIndentField = "";
        private bool endsWithNewline;
        private global::System.Collections.Generic.IDictionary<string, object> sessionField;
        #endregion
        #region Properties
        /// <summary>
        /// The string builder that generation-time code is using to assemble generated output
        /// </summary>
        protected System.Text.StringBuilder GenerationEnvironment
        {
            get
            {
                if ((this.generationEnvironmentField == null))
                {
                    this.generationEnvironmentField = new global::System.Text.StringBuilder();
                }
                return this.generationEnvironmentField;
            }
            set
            {
                this.generationEnvironmentField = value;
            }
        }
        /// <summary>
        /// The error collection for the generation process
        /// </summary>
        public System.CodeDom.Compiler.CompilerErrorCollection Errors
        {
            get
            {
                if ((this.errorsField == null))
                {
                    this.errorsField = new global::System.CodeDom.Compiler.CompilerErrorCollection();
                }
                return this.errorsField;
            }
        }
        /// <summary>
        /// A list of the lengths of each indent that was added with PushIndent
        /// </summary>
        private System.Collections.Generic.List<int> indentLengths
        {
            get
            {
                if ((this.indentLengthsField == null))
                {
                    this.indentLengthsField = new global::System.Collections.Generic.List<int>();
                }
                return this.indentLengthsField;
            }
        }
        /// <summary>
        /// Gets the current indent we use when adding lines to the output
        /// </summary>
        public string CurrentIndent
        {
            get
            {
                return this.currentIndentField;
            }
        }
        /// <summary>
        /// Current transformation session
        /// </summary>
        public virtual global::System.Collections.Generic.IDictionary<string, object> Session
        {
            get
            {
                return this.sessionField;
            }
            set
            {
                this.sessionField = value;
            }
        }
        #endregion
        #region Transform-time helpers
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void Write(string textToAppend)
        {
            if (string.IsNullOrEmpty(textToAppend))
            {
                return;
            }
            // If we're starting off, or if the previous text ended with a newline,
            // we have to append the current indent first.
            if (((this.GenerationEnvironment.Length == 0) 
                        || this.endsWithNewline))
            {
                this.GenerationEnvironment.Append(this.currentIndentField);
                this.endsWithNewline = false;
            }
            // Check if the current text ends with a newline
            if (textToAppend.EndsWith(global::System.Environment.NewLine, global::System.StringComparison.CurrentCulture))
            {
                this.endsWithNewline = true;
            }
            // This is an optimization. If the current indent is "", then we don't have to do any
            // of the more complex stuff further down.
            if ((this.currentIndentField.Length == 0))
            {
                this.GenerationEnvironment.Append(textToAppend);
                return;
            }
            // Everywhere there is a newline in the text, add an indent after it
            textToAppend = textToAppend.Replace(global::System.Environment.NewLine, (global::System.Environment.NewLine + this.currentIndentField));
            // If the text ends with a newline, then we should strip off the indent added at the very end
            // because the appropriate indent will be added when the next time Write() is called
            if (this.endsWithNewline)
            {
                this.GenerationEnvironment.Append(textToAppend, 0, (textToAppend.Length - this.currentIndentField.Length));
            }
            else
            {
                this.GenerationEnvironment.Append(textToAppend);
            }
        }
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void WriteLine(string textToAppend)
        {
            this.Write(textToAppend);
            this.GenerationEnvironment.AppendLine();
            this.endsWithNewline = true;
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void Write(string format, params object[] args)
        {
            this.Write(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void WriteLine(string format, params object[] args)
        {
            this.WriteLine(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Raise an error
        /// </summary>
        public void Error(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Raise a warning
        /// </summary>
        public void Warning(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            error.IsWarning = true;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Increase the indent
        /// </summary>
        public void PushIndent(string indent)
        {
            if ((indent == null))
            {
                throw new global::System.ArgumentNullException("indent");
            }
            this.currentIndentField = (this.currentIndentField + indent);
            this.indentLengths.Add(indent.Length);
        }
        /// <summary>
        /// Remove the last indent that was added with PushIndent
        /// </summary>
        public string PopIndent()
        {
            string returnValue = "";
            if ((this.indentLengths.Count > 0))
            {
                int indentLength = this.indentLengths[(this.indentLengths.Count - 1)];
                this.indentLengths.RemoveAt((this.indentLengths.Count - 1));
                if ((indentLength > 0))
                {
                    returnValue = this.currentIndentField.Substring((this.currentIndentField.Length - indentLength));
                    this.currentIndentField = this.currentIndentField.Remove((this.currentIndentField.Length - indentLength));
                }
            }
            return returnValue;
        }
        /// <summary>
        /// Remove any indentation
        /// </summary>
        public void ClearIndent()
        {
            this.indentLengths.Clear();
            this.currentIndentField = "";
        }
        #endregion
        #region ToString Helpers
        /// <summary>
        /// Utility class to produce culture-oriented representation of an object as a string.
        /// </summary>
        public class ToStringInstanceHelper
        {
            private System.IFormatProvider formatProviderField  = global::System.Globalization.CultureInfo.InvariantCulture;
            /// <summary>
            /// Gets or sets format provider to be used by ToStringWithCulture method.
            /// </summary>
            public System.IFormatProvider FormatProvider
            {
                get
                {
                    return this.formatProviderField ;
                }
                set
                {
                    if ((value != null))
                    {
                        this.formatProviderField  = value;
                    }
                }
            }
            /// <summary>
            /// This is called from the compile/run appdomain to convert objects within an expression block to a string
            /// </summary>
            public string ToStringWithCulture(object objectToConvert)
            {
                if ((objectToConvert == null))
                {
                    throw new global::System.ArgumentNullException("objectToConvert");
                }
                System.Type t = objectToConvert.GetType();
                System.Reflection.MethodInfo method = t.GetMethod("ToString", new System.Type[] {
                            typeof(System.IFormatProvider)});
                if ((method == null))
                {
                    return objectToConvert.ToString();
                }
                else
                {
                    return ((string)(method.Invoke(objectToConvert, new object[] {
                                this.formatProviderField })));
                }
            }
        }
        private ToStringInstanceHelper toStringHelperField = new ToStringInstanceHelper();
        /// <summary>
        /// Helper to produce culture-oriented representation of an object as a string
        /// </summary>
        public ToStringInstanceHelper ToStringHelper
        {
            get
            {
                return this.toStringHelperField;
            }
        }
        #endregion
    }
    #endregion
}
